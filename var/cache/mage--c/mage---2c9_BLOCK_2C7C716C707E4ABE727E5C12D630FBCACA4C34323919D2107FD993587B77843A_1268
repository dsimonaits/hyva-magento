a:4:{s:4:"hash";s:0:"";s:5:"mtime";i:1712577248;s:6:"expire";i:1712580848;s:4:"tags";s:48:"2c9_BLOCK_HTML,2c9_CAT_P_1268,2c9_CAT_P,2c9_MAGE";}

    <script>
        function initConfigurableSwatchOptions_1268() {
            const configurableOptionsComponent = initConfigurableOptions(
                '1268',
                {"attributes":{"144":{"id":"144","code":"size","label":"Size","options":[{"id":"166","label":"XS","products":["1253","1254","1255"]},{"id":"167","label":"S","products":["1256","1257","1258"]},{"id":"168","label":"M","products":["1259","1260","1261"]},{"id":"169","label":"L","products":["1262","1263","1264"]},{"id":"170","label":"XL","products":["1265","1266","1267"]}],"position":"0"},"93":{"id":"93","code":"color","label":"Color","options":[{"id":"56","label":"Orange","products":["1253","1256","1259","1262","1265"]},{"id":"58","label":"Red","products":["1254","1257","1260","1263","1266"]},{"id":"59","label":"White","products":["1255","1258","1261","1264","1267"]}],"position":"1"}},"template":"$<%- data.price %>","currencyFormat":"$%s","optionPrices":{"1253":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1254":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1255":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1256":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1257":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1258":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1259":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1260":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1261":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1262":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1263":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1264":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1265":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1266":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}},"1267":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84},"tierPrices":[],"msrpPrice":{"amount":0}}},"priceFormat":{"pattern":"$%s","precision":2,"requiredPrecision":2,"decimalSymbol":".","groupSymbol":",","groupLength":3,"integerRequired":false},"prices":{"baseOldPrice":{"amount":84},"oldPrice":{"amount":84},"basePrice":{"amount":84},"finalPrice":{"amount":84}},"productId":"1268","chooseText":"Choose an Option...","images":[],"index":{"1253":{"144":"166","93":"56"},"1254":{"144":"166","93":"58"},"1255":{"144":"166","93":"59"},"1256":{"144":"167","93":"56"},"1257":{"144":"167","93":"58"},"1258":{"144":"167","93":"59"},"1259":{"144":"168","93":"56"},"1260":{"144":"168","93":"58"},"1261":{"144":"168","93":"59"},"1262":{"144":"169","93":"56"},"1263":{"144":"169","93":"58"},"1264":{"144":"169","93":"59"},"1265":{"144":"170","93":"56"},"1266":{"144":"170","93":"58"},"1267":{"144":"170","93":"59"}},"salable":[],"canDisplayShowOutOfStockStatus":false,"channel":"website","salesChannelCode":"base","sku":{"1253":"WJ04-XS-Orange","1254":"WJ04-XS-Red","1255":"WJ04-XS-White","1256":"WJ04-S-Orange","1257":"WJ04-S-Red","1258":"WJ04-S-White","1259":"WJ04-M-Orange","1260":"WJ04-M-Red","1261":"WJ04-M-White","1262":"WJ04-L-Orange","1263":"WJ04-L-Red","1264":"WJ04-L-White","1265":"WJ04-XL-Orange","1266":"WJ04-XL-Red","1267":"WJ04-XL-White"}}            );
            const swatchOptionsComponent = initSwatchOptions({"144":{"166":{"type":"0","value":"XS","label":"XS"},"167":{"type":"0","value":"S","label":"S"},"168":{"type":"0","value":"M","label":"M"},"169":{"type":"0","value":"L","label":"L"},"170":{"type":"0","value":"XL","label":"XL"},"additional_data":"{\"swatch_input_type\":\"text\",\"update_product_preview_image\":1,\"use_product_image_for_swatch\":0}"},"93":{"56":{"type":"1","value":"#eb6703","label":"Orange"},"58":{"type":"1","value":"#ff0000","label":"Red"},"59":{"type":"1","value":"#ffffff","label":"White"},"additional_data":"{\"swatch_input_type\":\"visual\",\"update_product_preview_image\":1,\"use_product_image_for_swatch\":0}"}});

            return Object.assign(
                configurableOptionsComponent,
                swatchOptionsComponent,
                {
                    mediaCallback: "http\u003A\u002F\u002Fhyva\u002Dmagento.local\u002Fswatches\u002Fajax\u002Fmedia\u002F",
                    changeOption(optionId, value, skipUpdateGallery) {
                        if (value === '') {
                            this.selectedValues = this.removeAttrFromSelection(this.selectedValues, optionId)
                        } else {
                            this.selectedValues[optionId] = value;
                        }
                        this.findSimpleIndex();
                        this.findAllowedAttributeOptions();
                        this.updatePrices();
                        !skipUpdateGallery && this.updateGallery();
                        window.dispatchEvent(new CustomEvent('listing-configurable-selection-changed', {
                            detail: {
                                productId: this.productId,
                                optionId,
                                value,
                                productIndex: this.productIndex,
                                selectedValues: this.selectedValues,
                                candidates: this.findProductIdsForPartialSelection(this.selectedValues),
                            }
                        }));
                    },
                    updateGallery() {
                        if (!this.productIndex) {
                            return;
                        }

                        fetch(`${this.mediaCallback}?product_id=${this.productIndex}&isAjax=true`, {
                                method: 'GET',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'X-Requested-With': 'XMLHttpRequest'
                                }
                            }
                        ).then(response => {
                                return response.json()
                            }
                        ).then(data => {
                            if (data.errors) {
                                // non critical failure only console logged
                                console.warn(data.errors);
                            } else {
                                const image = data && data.medium;

                                image && window.dispatchEvent(
                                    new CustomEvent(
                                        "update-gallery-1268",
                                        {detail: image}
                                    )
                                );
                            }
                        }).catch(error => {
                            console.warn(error)
                        });
                    },
                    preselectQuerystringItems() {
                        // pre-select option like ?size=167
                        const urlQueryParams = new URLSearchParams(window.location.search.replace('?', ''));
                        Object.values(this.optionConfig.attributes).map(attribute => {
                            // Don't update images on load, since PLPs already set the main image to the selected options
                            const skipUpdateGallery = true;
                            urlQueryParams.get(attribute.code) &&
                            this.changeOption(attribute.id, urlQueryParams.get(attribute.code), skipUpdateGallery);
                        });
                    },
                    mouseDown: false,
                    startX: 0,
                    maxScroll: 0,
                    scrollLeft: null,
                    slider: null,
                    scrollEvents: {
                        ['@mousedown'](e) {
                            this.slider = e.target.closest('.snap');
                            if (!this.slider) {
                                return;
                            }
                            this.maxScroll = this.slider.scrollWidth - this.slider.offsetWidth;
                            this.startX = e.pageX - this.slider.offsetLeft;
                            this.scrollLeft = this.slider.scrollLeft;
                            this.mouseDown = true;
                        },
                        ['@mouseout.self']() {
                            this.mouseDown = false;
                        },
                        ['@mouseup']() {
                            this.mouseDown = false;
                        },
                        ['@mousemove'](e) {
                            e.preventDefault();
                            if (!this.mouseDown) {
                                return;
                            }
                            const x = e.pageX - this.slider.offsetLeft;
                            const scroll = x - this.startX;
                            const scrollLeft = this.scrollLeft - scroll;

                            if (scrollLeft > this.maxScroll) {
                                this.slider.scrollLeft = this.maxScroll;
                                return
                            }
                            this.slider.scrollLeft = this.scrollLeft - scroll;
                        },
                        ['@onselectstart']() {
                            return false;
                        }
                    },
                    resizeEvent() {
                        Array.from(this.$root.querySelectorAll('.snap')).forEach(slider => {
                            slider.scrollLeft = 0;
                        })
                    }
                }
            );
        }

    </script>

<div x-data="initConfigurableSwatchOptions_1268()"
     x-init="findAllowedAttributeOptions(); initShowSwatchesIntersect();"
     @private-content-loaded.window="onGetCartData($event.detail.data)"
     @resize.window="resizeEvent()"
     class="mb-2 relative"
>
    <div>
                                
                    <div class="swatch-attribute border-t last:border-b border-container
            size"
        >
            <div class="w-full overflow-x-hidden swatch-attribute-options min-h-14">
                <template x-if="showSwatches">
                    <div class="flex flex-nowrap w-full overflow-auto snap items-center py-1"
                        id="attribute-label-1268-144"
                        role="radiogroup"
                        x-bind="scrollEvents"
                        aria-label="Size"
                    >
                        <template x-for="(item, index) in optionConfig.attributes[144].options"
                                  :key="item.id"
                        >
                            <!-- START_MSPDEV[fee7b9a01d323dfc4287b10438b11f79]: product.swatch.item -->
<div x-id="['attribute-option-1268-'+item.id]">
    <template x-if="optionIsEnabled(144, item.id) && optionIsActive(144, item.id)">
        <label
            :for="$id('attribute-option-1268-'+item.id)"
            class="swatch-option relative shadow-sm cursor-pointer select-none bg-container-lighter product-option-value-label"
            :class="{
                'border-container-lighter ring ring-primary/50':
                    (selectedValues[144] === item.id),
                'border-container-darker':
                    (selectedValues[144] !== item.id),
                'w-6 h-6' : !isTextSwatch(144, item.id),
                'border-container-lighter ring ring-primary/75' : focusedLabel === item.id
            }"
            :style="getSwatchBackgroundStyle('144',item.id)"
                            @mouseenter.self="activeTooltipItem = {
                    attribute: '144',
                    item: item.id,
                    index
                }; tooltipPositionElement = $event.target;"
                @mouseleave.self="activeTooltipItem = false"
                    >
            <input
                :id="$id('attribute-option-1268-'+item.id)"
                :value="item.id"
                name="super_attribute[144]"
                type="radio"
                class="inline-block absolute p-0 border-0 focus:border-0 focus:ring-0 product-option-value-input"
                style="z-index:-1"
                x-on:focus="focusLabel(item.id)"
                x-on:blur="blurLabel()"
                x-on:change="changeOption(144, $event.target.value)"
                x-on:click="clearOptionIfActive(144, item.id)"
                x-model="selectedValues[144]"
                :required="getAllowedAttributeOptions(144).filter(
                    attributeOption => selectedValues[attributeOption]
                ).length === 0"
                :aria-label="getSwatchText(144, item.id)"
                aria-describedby="attribute-label-1268-144"
            >
            <template x-if="isTextSwatch(144, item.id)">
                <div
                    x-html="getSwatchText(144, item.id)"
                    class="pointer-events-none select-none whitespace-nowrap"
                    aria-hidden="true"
                ></div>
            </template>
        </label>
    </template>

    <template x-if="optionIsEnabled(144, item.id) && !optionIsActive(144, item.id)">
        <div
            class="relative border-2 shadow-sm opacity-50 cursor-pointer select-none border-container-darker swatch-option bg-container-lighter"
            :class="{
                                                        'w-6 h-6' : !isTextSwatch(144, item.id),
                                                    }"
            :style="getSwatchBackgroundStyle('144',item.id)"
        >
            <div x-html="getSwatchText(144, item.id)"
                 class="whitespace-nowrap"
                 :class="{ 'sr-only' : !isTextSwatch(144, item.id) }"
            ></div>
            <svg class="absolute inset-0 w-full h-full text-gray-500 bg-white/25">
                <line x1="0" y1="100%" x2="100%" y2="0" class="stroke-current stroke-1"></line>
            </svg>
        </div>
    </template>
</div>
<!-- END_MSPDEV[fee7b9a01d323dfc4287b10438b11f79]: product.swatch.item -->                        </template>
                    </div>
                </template>
            </div>
        </div>
                                
                    <div class="swatch-attribute border-t last:border-b border-container
            color"
        >
            <div class="w-full overflow-x-hidden swatch-attribute-options min-h-14">
                <template x-if="showSwatches">
                    <div class="flex flex-nowrap w-full overflow-auto snap items-center py-1"
                        id="attribute-label-1268-93"
                        role="radiogroup"
                        x-bind="scrollEvents"
                        aria-label="Color"
                    >
                        <template x-for="(item, index) in optionConfig.attributes[93].options"
                                  :key="item.id"
                        >
                            <!-- START_MSPDEV[fee7b9a01d323dfc4287b10438b11f79]: product.swatch.item -->
<div x-id="['attribute-option-1268-'+item.id]">
    <template x-if="optionIsEnabled(93, item.id) && optionIsActive(93, item.id)">
        <label
            :for="$id('attribute-option-1268-'+item.id)"
            class="swatch-option relative shadow-sm cursor-pointer select-none bg-container-lighter product-option-value-label"
            :class="{
                'border-container-lighter ring ring-primary/50':
                    (selectedValues[93] === item.id),
                'border-container-darker':
                    (selectedValues[93] !== item.id),
                'w-6 h-6' : !isTextSwatch(93, item.id),
                'border-container-lighter ring ring-primary/75' : focusedLabel === item.id
            }"
            :style="getSwatchBackgroundStyle('93',item.id)"
                            @mouseenter.self="activeTooltipItem = {
                    attribute: '93',
                    item: item.id,
                    index
                }; tooltipPositionElement = $event.target;"
                @mouseleave.self="activeTooltipItem = false"
                    >
            <input
                :id="$id('attribute-option-1268-'+item.id)"
                :value="item.id"
                name="super_attribute[93]"
                type="radio"
                class="inline-block absolute p-0 border-0 focus:border-0 focus:ring-0 product-option-value-input"
                style="z-index:-1"
                x-on:focus="focusLabel(item.id)"
                x-on:blur="blurLabel()"
                x-on:change="changeOption(93, $event.target.value)"
                x-on:click="clearOptionIfActive(93, item.id)"
                x-model="selectedValues[93]"
                :required="getAllowedAttributeOptions(93).filter(
                    attributeOption => selectedValues[attributeOption]
                ).length === 0"
                :aria-label="getSwatchText(93, item.id)"
                aria-describedby="attribute-label-1268-93"
            >
            <template x-if="isTextSwatch(93, item.id)">
                <div
                    x-html="getSwatchText(93, item.id)"
                    class="pointer-events-none select-none whitespace-nowrap"
                    aria-hidden="true"
                ></div>
            </template>
        </label>
    </template>

    <template x-if="optionIsEnabled(93, item.id) && !optionIsActive(93, item.id)">
        <div
            class="relative border-2 shadow-sm opacity-50 cursor-pointer select-none border-container-darker swatch-option bg-container-lighter"
            :class="{
                                                        'w-6 h-6' : !isTextSwatch(93, item.id),
                                                    }"
            :style="getSwatchBackgroundStyle('93',item.id)"
        >
            <div x-html="getSwatchText(93, item.id)"
                 class="whitespace-nowrap"
                 :class="{ 'sr-only' : !isTextSwatch(93, item.id) }"
            ></div>
            <svg class="absolute inset-0 w-full h-full text-gray-500 bg-white/25">
                <line x1="0" y1="100%" x2="100%" y2="0" class="stroke-current stroke-1"></line>
            </svg>
        </div>
    </template>
</div>
<!-- END_MSPDEV[fee7b9a01d323dfc4287b10438b11f79]: product.swatch.item -->                        </template>
                    </div>
                </template>
            </div>
        </div>
            </div>
            <!-- START_MSPDEV[ff1bb3d3186629ba671f02e648a9838d]: product.swatch.tooltip --><template x-if="isTooltipVisible()">
    <div class="absolute pointer-events-none select-none"
         :style="getTooltipPosition()"
    >
        <div class="shadow-lg">
            <div class="absolute top-0 left-0 z-10 min-w-20 p-2 -mt-6 text-sm leading-tight text-black
                    transform -translate-x-1/2 -translate-y-full bg-white rounded-lg shadow-lg text-center"
                 :class="{'-translate-x-5' : isFirstItemCol()}"
            >
            <template x-if="isVisualSwatch(activeTooltipItem.attribute, activeTooltipItem.item)">
                <div class="inline-block border shadow-sm border-container"
                     :style="getTooltipImageStyle(activeTooltipItem.attribute, activeTooltipItem.item)"
                ></div>
            </template>
                <span class="mx-2 text-lg font-semibold whitespace-nowrap subtitle"
                      x-html="getTooltipLabel()"
                ></span>
            </div>
            <svg class="absolute z-10 w-8 h-8 text-white transform -translate-x-1/5
                    -translate-y-8 fill-current stroke-current"
                 width="12"
                 height="12"
            >
                <rect x="12" y="-12" width="12" height="12" transform="rotate(45)" class="shadow-xl" />
            </svg>
        </div>
    </div>
</template>
<!-- END_MSPDEV[ff1bb3d3186629ba671f02e648a9838d]: product.swatch.tooltip -->    </div>
